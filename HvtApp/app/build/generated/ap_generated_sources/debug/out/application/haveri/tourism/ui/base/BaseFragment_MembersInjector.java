// Generated by Dagger (https://google.github.io/dagger).
package application.haveri.tourism.ui.base;

import androidx.databinding.ViewDataBinding;
import application.haveri.tourism.ViewModelProviderFactory;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class BaseFragment_MembersInjector<T extends ViewDataBinding, V extends BaseViewModel>
    implements MembersInjector<BaseFragment<T, V>> {
  private final Provider<ViewModelProviderFactory> factoryProvider;

  public BaseFragment_MembersInjector(Provider<ViewModelProviderFactory> factoryProvider) {
    this.factoryProvider = factoryProvider;
  }

  public static <T extends ViewDataBinding, V extends BaseViewModel>
      MembersInjector<BaseFragment<T, V>> create(
          Provider<ViewModelProviderFactory> factoryProvider) {
    return new BaseFragment_MembersInjector<T, V>(factoryProvider);
  }

  @Override
  public void injectMembers(BaseFragment<T, V> instance) {
    injectFactory(instance, factoryProvider.get());
  }

  public static <T extends ViewDataBinding, V extends BaseViewModel> void injectFactory(
      BaseFragment<T, V> instance, ViewModelProviderFactory factory) {
    instance.factory = factory;
  }
}
