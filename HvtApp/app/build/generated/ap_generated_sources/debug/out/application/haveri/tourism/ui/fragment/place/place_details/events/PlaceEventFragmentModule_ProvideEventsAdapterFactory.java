// Generated by Dagger (https://google.github.io/dagger).
package application.haveri.tourism.ui.fragment.place.place_details.events;

import application.haveri.tourism.ui.fragment.common.adapter.EventsAdapter;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class PlaceEventFragmentModule_ProvideEventsAdapterFactory
    implements Factory<EventsAdapter> {
  private final PlaceEventFragmentModule module;

  public PlaceEventFragmentModule_ProvideEventsAdapterFactory(PlaceEventFragmentModule module) {
    this.module = module;
  }

  @Override
  public EventsAdapter get() {
    return provideInstance(module);
  }

  public static EventsAdapter provideInstance(PlaceEventFragmentModule module) {
    return proxyProvideEventsAdapter(module);
  }

  public static PlaceEventFragmentModule_ProvideEventsAdapterFactory create(
      PlaceEventFragmentModule module) {
    return new PlaceEventFragmentModule_ProvideEventsAdapterFactory(module);
  }

  public static EventsAdapter proxyProvideEventsAdapter(PlaceEventFragmentModule instance) {
    return Preconditions.checkNotNull(
        instance.provideEventsAdapter(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
