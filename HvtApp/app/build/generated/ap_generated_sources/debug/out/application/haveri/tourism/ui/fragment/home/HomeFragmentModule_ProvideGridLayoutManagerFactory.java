// Generated by Dagger (https://google.github.io/dagger).
package application.haveri.tourism.ui.fragment.home;

import androidx.recyclerview.widget.GridLayoutManager;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class HomeFragmentModule_ProvideGridLayoutManagerFactory
    implements Factory<GridLayoutManager> {
  private final HomeFragmentModule module;

  private final Provider<HomeFragment> fragmentProvider;

  public HomeFragmentModule_ProvideGridLayoutManagerFactory(
      HomeFragmentModule module, Provider<HomeFragment> fragmentProvider) {
    this.module = module;
    this.fragmentProvider = fragmentProvider;
  }

  @Override
  public GridLayoutManager get() {
    return provideInstance(module, fragmentProvider);
  }

  public static GridLayoutManager provideInstance(
      HomeFragmentModule module, Provider<HomeFragment> fragmentProvider) {
    return proxyProvideGridLayoutManager(module, fragmentProvider.get());
  }

  public static HomeFragmentModule_ProvideGridLayoutManagerFactory create(
      HomeFragmentModule module, Provider<HomeFragment> fragmentProvider) {
    return new HomeFragmentModule_ProvideGridLayoutManagerFactory(module, fragmentProvider);
  }

  public static GridLayoutManager proxyProvideGridLayoutManager(
      HomeFragmentModule instance, HomeFragment fragment) {
    return Preconditions.checkNotNull(
        instance.provideGridLayoutManager(fragment),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
