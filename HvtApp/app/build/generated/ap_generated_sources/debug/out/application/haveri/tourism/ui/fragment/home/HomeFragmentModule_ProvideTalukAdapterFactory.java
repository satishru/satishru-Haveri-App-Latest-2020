// Generated by Dagger (https://google.github.io/dagger).
package application.haveri.tourism.ui.fragment.home;

import application.haveri.tourism.ui.fragment.home.adapter.taluk.HomeTalukAdapter;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class HomeFragmentModule_ProvideTalukAdapterFactory
    implements Factory<HomeTalukAdapter> {
  private final HomeFragmentModule module;

  public HomeFragmentModule_ProvideTalukAdapterFactory(HomeFragmentModule module) {
    this.module = module;
  }

  @Override
  public HomeTalukAdapter get() {
    return provideInstance(module);
  }

  public static HomeTalukAdapter provideInstance(HomeFragmentModule module) {
    return proxyProvideTalukAdapter(module);
  }

  public static HomeFragmentModule_ProvideTalukAdapterFactory create(HomeFragmentModule module) {
    return new HomeFragmentModule_ProvideTalukAdapterFactory(module);
  }

  public static HomeTalukAdapter proxyProvideTalukAdapter(HomeFragmentModule instance) {
    return Preconditions.checkNotNull(
        instance.provideTalukAdapter(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
