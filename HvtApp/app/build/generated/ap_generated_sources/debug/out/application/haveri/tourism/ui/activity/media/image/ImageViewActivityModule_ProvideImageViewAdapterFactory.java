// Generated by Dagger (https://google.github.io/dagger).
package application.haveri.tourism.ui.activity.media.image;

import application.haveri.tourism.ui.activity.media.image.adapter.ImageViewAdapter;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class ImageViewActivityModule_ProvideImageViewAdapterFactory
    implements Factory<ImageViewAdapter> {
  private final ImageViewActivityModule module;

  public ImageViewActivityModule_ProvideImageViewAdapterFactory(ImageViewActivityModule module) {
    this.module = module;
  }

  @Override
  public ImageViewAdapter get() {
    return provideInstance(module);
  }

  public static ImageViewAdapter provideInstance(ImageViewActivityModule module) {
    return proxyProvideImageViewAdapter(module);
  }

  public static ImageViewActivityModule_ProvideImageViewAdapterFactory create(
      ImageViewActivityModule module) {
    return new ImageViewActivityModule_ProvideImageViewAdapterFactory(module);
  }

  public static ImageViewAdapter proxyProvideImageViewAdapter(ImageViewActivityModule instance) {
    return Preconditions.checkNotNull(
        instance.provideImageViewAdapter(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
