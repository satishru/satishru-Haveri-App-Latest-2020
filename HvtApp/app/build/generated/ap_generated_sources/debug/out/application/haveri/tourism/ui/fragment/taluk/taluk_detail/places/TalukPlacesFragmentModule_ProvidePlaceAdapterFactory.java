// Generated by Dagger (https://google.github.io/dagger).
package application.haveri.tourism.ui.fragment.taluk.taluk_detail.places;

import application.haveri.tourism.ui.fragment.common.adapter.PlaceAdapter;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class TalukPlacesFragmentModule_ProvidePlaceAdapterFactory
    implements Factory<PlaceAdapter> {
  private final TalukPlacesFragmentModule module;

  public TalukPlacesFragmentModule_ProvidePlaceAdapterFactory(TalukPlacesFragmentModule module) {
    this.module = module;
  }

  @Override
  public PlaceAdapter get() {
    return provideInstance(module);
  }

  public static PlaceAdapter provideInstance(TalukPlacesFragmentModule module) {
    return proxyProvidePlaceAdapter(module);
  }

  public static TalukPlacesFragmentModule_ProvidePlaceAdapterFactory create(
      TalukPlacesFragmentModule module) {
    return new TalukPlacesFragmentModule_ProvidePlaceAdapterFactory(module);
  }

  public static PlaceAdapter proxyProvidePlaceAdapter(TalukPlacesFragmentModule instance) {
    return Preconditions.checkNotNull(
        instance.providePlaceAdapter(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
