// Generated by data binding compiler. Do not edit!
package application.haveri.tourism.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import application.haveri.tourism.R;
import application.haveri.tourism.data.model.api.response.haveri_data.Images;
import application.haveri.tourism.ui.custom.CustomTextView;
import application.haveri.tourism.ui.custom.TouchImageView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class LayoutFullscreenImageBinding extends ViewDataBinding {
  @NonNull
  public final TouchImageView ivImage;

  @NonNull
  public final ImageView ivPlaceHolder;

  @NonNull
  public final CustomTextView tvImageDesc;

  @Bindable
  protected Integer mSelectedLanguage;

  @Bindable
  protected Images mImageObj;

  protected LayoutFullscreenImageBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TouchImageView ivImage, ImageView ivPlaceHolder, CustomTextView tvImageDesc) {
    super(_bindingComponent, _root, _localFieldCount);
    this.ivImage = ivImage;
    this.ivPlaceHolder = ivPlaceHolder;
    this.tvImageDesc = tvImageDesc;
  }

  public abstract void setSelectedLanguage(@Nullable Integer selectedLanguage);

  @Nullable
  public Integer getSelectedLanguage() {
    return mSelectedLanguage;
  }

  public abstract void setImageObj(@Nullable Images imageObj);

  @Nullable
  public Images getImageObj() {
    return mImageObj;
  }

  @NonNull
  public static LayoutFullscreenImageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_fullscreen_image, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static LayoutFullscreenImageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<LayoutFullscreenImageBinding>inflateInternal(inflater, R.layout.layout_fullscreen_image, root, attachToRoot, component);
  }

  @NonNull
  public static LayoutFullscreenImageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_fullscreen_image, null, false, component)
   */
  @NonNull
  @Deprecated
  public static LayoutFullscreenImageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<LayoutFullscreenImageBinding>inflateInternal(inflater, R.layout.layout_fullscreen_image, null, false, component);
  }

  public static LayoutFullscreenImageBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static LayoutFullscreenImageBinding bind(@NonNull View view, @Nullable Object component) {
    return (LayoutFullscreenImageBinding)bind(component, view, R.layout.layout_fullscreen_image);
  }
}
